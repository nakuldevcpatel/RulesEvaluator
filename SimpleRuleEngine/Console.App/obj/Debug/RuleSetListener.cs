//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.3
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from D:\Learnings\ANTLR\RulesEvaluator\SimpleRuleEngine\Console.App\Grammar\RuleSet.g4 by ANTLR 4.3

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591

namespace Console.App.Grammar {
using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="RuleSetParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.3")]
[System.CLSCompliant(false)]
public interface IRuleSetListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="RuleSetParser.single_rule"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSingle_rule([NotNull] RuleSetParser.Single_ruleContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RuleSetParser.single_rule"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSingle_rule([NotNull] RuleSetParser.Single_ruleContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>LogicalExpressionOr</c>
	/// labeled alternative in <see cref="RuleSetParser.logical_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLogicalExpressionOr([NotNull] RuleSetParser.LogicalExpressionOrContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>LogicalExpressionOr</c>
	/// labeled alternative in <see cref="RuleSetParser.logical_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLogicalExpressionOr([NotNull] RuleSetParser.LogicalExpressionOrContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>ArithmeticExpressionMult</c>
	/// labeled alternative in <see cref="RuleSetParser.arithmetic_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArithmeticExpressionMult([NotNull] RuleSetParser.ArithmeticExpressionMultContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ArithmeticExpressionMult</c>
	/// labeled alternative in <see cref="RuleSetParser.arithmetic_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArithmeticExpressionMult([NotNull] RuleSetParser.ArithmeticExpressionMultContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>BooleanIsFalseComparisonSpecificationExpression</c>
	/// labeled alternative in <see cref="RuleSetParser.specification_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBooleanIsFalseComparisonSpecificationExpression([NotNull] RuleSetParser.BooleanIsFalseComparisonSpecificationExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>BooleanIsFalseComparisonSpecificationExpression</c>
	/// labeled alternative in <see cref="RuleSetParser.specification_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBooleanIsFalseComparisonSpecificationExpression([NotNull] RuleSetParser.BooleanIsFalseComparisonSpecificationExpressionContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>ArithmeticExpressionNumericEntity</c>
	/// labeled alternative in <see cref="RuleSetParser.arithmetic_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArithmeticExpressionNumericEntity([NotNull] RuleSetParser.ArithmeticExpressionNumericEntityContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ArithmeticExpressionNumericEntity</c>
	/// labeled alternative in <see cref="RuleSetParser.arithmetic_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArithmeticExpressionNumericEntity([NotNull] RuleSetParser.ArithmeticExpressionNumericEntityContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>ArithmeticExpressionMinus</c>
	/// labeled alternative in <see cref="RuleSetParser.arithmetic_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArithmeticExpressionMinus([NotNull] RuleSetParser.ArithmeticExpressionMinusContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ArithmeticExpressionMinus</c>
	/// labeled alternative in <see cref="RuleSetParser.arithmetic_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArithmeticExpressionMinus([NotNull] RuleSetParser.ArithmeticExpressionMinusContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>ArithmeticExpressionPlus</c>
	/// labeled alternative in <see cref="RuleSetParser.arithmetic_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArithmeticExpressionPlus([NotNull] RuleSetParser.ArithmeticExpressionPlusContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ArithmeticExpressionPlus</c>
	/// labeled alternative in <see cref="RuleSetParser.arithmetic_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArithmeticExpressionPlus([NotNull] RuleSetParser.ArithmeticExpressionPlusContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>NumericGreaterThanComparisonSpecificationExpression</c>
	/// labeled alternative in <see cref="RuleSetParser.specification_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNumericGreaterThanComparisonSpecificationExpression([NotNull] RuleSetParser.NumericGreaterThanComparisonSpecificationExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>NumericGreaterThanComparisonSpecificationExpression</c>
	/// labeled alternative in <see cref="RuleSetParser.specification_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNumericGreaterThanComparisonSpecificationExpression([NotNull] RuleSetParser.NumericGreaterThanComparisonSpecificationExpressionContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>SpecificationExpression</c>
	/// labeled alternative in <see cref="RuleSetParser.logical_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSpecificationExpression([NotNull] RuleSetParser.SpecificationExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>SpecificationExpression</c>
	/// labeled alternative in <see cref="RuleSetParser.logical_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSpecificationExpression([NotNull] RuleSetParser.SpecificationExpressionContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>LogicalExpressionNot</c>
	/// labeled alternative in <see cref="RuleSetParser.logical_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLogicalExpressionNot([NotNull] RuleSetParser.LogicalExpressionNotContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>LogicalExpressionNot</c>
	/// labeled alternative in <see cref="RuleSetParser.logical_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLogicalExpressionNot([NotNull] RuleSetParser.LogicalExpressionNotContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>JsonPathExpression</c>
	/// labeled alternative in <see cref="RuleSetParser.numeric_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterJsonPathExpression([NotNull] RuleSetParser.JsonPathExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>JsonPathExpression</c>
	/// labeled alternative in <see cref="RuleSetParser.numeric_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitJsonPathExpression([NotNull] RuleSetParser.JsonPathExpressionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RuleSetParser.query_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterQuery_expr([NotNull] RuleSetParser.Query_exprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RuleSetParser.query_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitQuery_expr([NotNull] RuleSetParser.Query_exprContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>NumericLessThanComparisonSpecificationExpression</c>
	/// labeled alternative in <see cref="RuleSetParser.specification_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNumericLessThanComparisonSpecificationExpression([NotNull] RuleSetParser.NumericLessThanComparisonSpecificationExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>NumericLessThanComparisonSpecificationExpression</c>
	/// labeled alternative in <see cref="RuleSetParser.specification_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNumericLessThanComparisonSpecificationExpression([NotNull] RuleSetParser.NumericLessThanComparisonSpecificationExpressionContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>NumericEqualComparisonSpecificationExpression</c>
	/// labeled alternative in <see cref="RuleSetParser.specification_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNumericEqualComparisonSpecificationExpression([NotNull] RuleSetParser.NumericEqualComparisonSpecificationExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>NumericEqualComparisonSpecificationExpression</c>
	/// labeled alternative in <see cref="RuleSetParser.specification_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNumericEqualComparisonSpecificationExpression([NotNull] RuleSetParser.NumericEqualComparisonSpecificationExpressionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RuleSetParser.jsonpath_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterJsonpath_expr([NotNull] RuleSetParser.Jsonpath_exprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RuleSetParser.jsonpath_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitJsonpath_expr([NotNull] RuleSetParser.Jsonpath_exprContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RuleSetParser.total_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTotal_expr([NotNull] RuleSetParser.Total_exprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RuleSetParser.total_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTotal_expr([NotNull] RuleSetParser.Total_exprContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RuleSetParser.value_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterValue_expr([NotNull] RuleSetParser.Value_exprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RuleSetParser.value_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitValue_expr([NotNull] RuleSetParser.Value_exprContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RuleSetParser.jsonpath_dotnotation_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterJsonpath_dotnotation_expr([NotNull] RuleSetParser.Jsonpath_dotnotation_exprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RuleSetParser.jsonpath_dotnotation_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitJsonpath_dotnotation_expr([NotNull] RuleSetParser.Jsonpath_dotnotation_exprContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>StringEqualsComparisonSpecificationExpression</c>
	/// labeled alternative in <see cref="RuleSetParser.specification_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStringEqualsComparisonSpecificationExpression([NotNull] RuleSetParser.StringEqualsComparisonSpecificationExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>StringEqualsComparisonSpecificationExpression</c>
	/// labeled alternative in <see cref="RuleSetParser.specification_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStringEqualsComparisonSpecificationExpression([NotNull] RuleSetParser.StringEqualsComparisonSpecificationExpressionContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>LogicalExpressionAnd</c>
	/// labeled alternative in <see cref="RuleSetParser.logical_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLogicalExpressionAnd([NotNull] RuleSetParser.LogicalExpressionAndContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>LogicalExpressionAnd</c>
	/// labeled alternative in <see cref="RuleSetParser.logical_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLogicalExpressionAnd([NotNull] RuleSetParser.LogicalExpressionAndContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>NumericConstant</c>
	/// labeled alternative in <see cref="RuleSetParser.numeric_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNumericConstant([NotNull] RuleSetParser.NumericConstantContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>NumericConstant</c>
	/// labeled alternative in <see cref="RuleSetParser.numeric_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNumericConstant([NotNull] RuleSetParser.NumericConstantContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>TotalledJsonPathExpression</c>
	/// labeled alternative in <see cref="RuleSetParser.numeric_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTotalledJsonPathExpression([NotNull] RuleSetParser.TotalledJsonPathExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>TotalledJsonPathExpression</c>
	/// labeled alternative in <see cref="RuleSetParser.numeric_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTotalledJsonPathExpression([NotNull] RuleSetParser.TotalledJsonPathExpressionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RuleSetParser.dotnotation_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDotnotation_expr([NotNull] RuleSetParser.Dotnotation_exprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RuleSetParser.dotnotation_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDotnotation_expr([NotNull] RuleSetParser.Dotnotation_exprContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>ArithmeticExpressionDiv</c>
	/// labeled alternative in <see cref="RuleSetParser.arithmetic_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArithmeticExpressionDiv([NotNull] RuleSetParser.ArithmeticExpressionDivContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ArithmeticExpressionDiv</c>
	/// labeled alternative in <see cref="RuleSetParser.arithmetic_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArithmeticExpressionDiv([NotNull] RuleSetParser.ArithmeticExpressionDivContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RuleSetParser.string_comparison_value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterString_comparison_value([NotNull] RuleSetParser.String_comparison_valueContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RuleSetParser.string_comparison_value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitString_comparison_value([NotNull] RuleSetParser.String_comparison_valueContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RuleSetParser.left_arithmetic_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLeft_arithmetic_expr([NotNull] RuleSetParser.Left_arithmetic_exprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RuleSetParser.left_arithmetic_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLeft_arithmetic_expr([NotNull] RuleSetParser.Left_arithmetic_exprContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>TotalledNumericLessThanComparisonSpecificationExpression</c>
	/// labeled alternative in <see cref="RuleSetParser.specification_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTotalledNumericLessThanComparisonSpecificationExpression([NotNull] RuleSetParser.TotalledNumericLessThanComparisonSpecificationExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>TotalledNumericLessThanComparisonSpecificationExpression</c>
	/// labeled alternative in <see cref="RuleSetParser.specification_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTotalledNumericLessThanComparisonSpecificationExpression([NotNull] RuleSetParser.TotalledNumericLessThanComparisonSpecificationExpressionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RuleSetParser.identifierWithQualifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIdentifierWithQualifier([NotNull] RuleSetParser.IdentifierWithQualifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RuleSetParser.identifierWithQualifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIdentifierWithQualifier([NotNull] RuleSetParser.IdentifierWithQualifierContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RuleSetParser.rule_set"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRule_set([NotNull] RuleSetParser.Rule_setContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RuleSetParser.rule_set"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRule_set([NotNull] RuleSetParser.Rule_setContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>StringContainsComparisonSpecificationExpression</c>
	/// labeled alternative in <see cref="RuleSetParser.specification_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStringContainsComparisonSpecificationExpression([NotNull] RuleSetParser.StringContainsComparisonSpecificationExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>StringContainsComparisonSpecificationExpression</c>
	/// labeled alternative in <see cref="RuleSetParser.specification_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStringContainsComparisonSpecificationExpression([NotNull] RuleSetParser.StringContainsComparisonSpecificationExpressionContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>BooleanIsTrueComparisonSpecificationExpression</c>
	/// labeled alternative in <see cref="RuleSetParser.specification_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBooleanIsTrueComparisonSpecificationExpression([NotNull] RuleSetParser.BooleanIsTrueComparisonSpecificationExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>BooleanIsTrueComparisonSpecificationExpression</c>
	/// labeled alternative in <see cref="RuleSetParser.specification_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBooleanIsTrueComparisonSpecificationExpression([NotNull] RuleSetParser.BooleanIsTrueComparisonSpecificationExpressionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RuleSetParser.right_arithmetic_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRight_arithmetic_expr([NotNull] RuleSetParser.Right_arithmetic_exprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RuleSetParser.right_arithmetic_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRight_arithmetic_expr([NotNull] RuleSetParser.Right_arithmetic_exprContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="RuleSetParser.string_array"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterString_array([NotNull] RuleSetParser.String_arrayContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RuleSetParser.string_array"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitString_array([NotNull] RuleSetParser.String_arrayContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>ArrayIncludesOneComparisonSpecificationExpression</c>
	/// labeled alternative in <see cref="RuleSetParser.specification_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArrayIncludesOneComparisonSpecificationExpression([NotNull] RuleSetParser.ArrayIncludesOneComparisonSpecificationExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ArrayIncludesOneComparisonSpecificationExpression</c>
	/// labeled alternative in <see cref="RuleSetParser.specification_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArrayIncludesOneComparisonSpecificationExpression([NotNull] RuleSetParser.ArrayIncludesOneComparisonSpecificationExpressionContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>TotalledNumericGreaterThanComparisonSpecificationExpression</c>
	/// labeled alternative in <see cref="RuleSetParser.specification_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTotalledNumericGreaterThanComparisonSpecificationExpression([NotNull] RuleSetParser.TotalledNumericGreaterThanComparisonSpecificationExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>TotalledNumericGreaterThanComparisonSpecificationExpression</c>
	/// labeled alternative in <see cref="RuleSetParser.specification_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTotalledNumericGreaterThanComparisonSpecificationExpression([NotNull] RuleSetParser.TotalledNumericGreaterThanComparisonSpecificationExpressionContext context);
}
} // namespace Console.App.Grammar
