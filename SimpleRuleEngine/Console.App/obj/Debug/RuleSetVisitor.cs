//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.3
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from D:\Learnings\ANTLR\RulesEvaluator\SimpleRuleEngine\Console.App\Grammar\RuleSet.g4 by ANTLR 4.3

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591

namespace Console.App.Grammar {
using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="RuleSetParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.3")]
[System.CLSCompliant(false)]
public interface IRuleSetVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by <see cref="RuleSetParser.single_rule"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSingle_rule([NotNull] RuleSetParser.Single_ruleContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>LogicalExpressionOr</c>
	/// labeled alternative in <see cref="RuleSetParser.logical_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLogicalExpressionOr([NotNull] RuleSetParser.LogicalExpressionOrContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>ArithmeticExpressionMult</c>
	/// labeled alternative in <see cref="RuleSetParser.arithmetic_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArithmeticExpressionMult([NotNull] RuleSetParser.ArithmeticExpressionMultContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>BooleanIsFalseComparisonSpecificationExpression</c>
	/// labeled alternative in <see cref="RuleSetParser.specification_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBooleanIsFalseComparisonSpecificationExpression([NotNull] RuleSetParser.BooleanIsFalseComparisonSpecificationExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>ArithmeticExpressionNumericEntity</c>
	/// labeled alternative in <see cref="RuleSetParser.arithmetic_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArithmeticExpressionNumericEntity([NotNull] RuleSetParser.ArithmeticExpressionNumericEntityContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>ArithmeticExpressionMinus</c>
	/// labeled alternative in <see cref="RuleSetParser.arithmetic_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArithmeticExpressionMinus([NotNull] RuleSetParser.ArithmeticExpressionMinusContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>ArithmeticExpressionPlus</c>
	/// labeled alternative in <see cref="RuleSetParser.arithmetic_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArithmeticExpressionPlus([NotNull] RuleSetParser.ArithmeticExpressionPlusContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>NumericGreaterThanComparisonSpecificationExpression</c>
	/// labeled alternative in <see cref="RuleSetParser.specification_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNumericGreaterThanComparisonSpecificationExpression([NotNull] RuleSetParser.NumericGreaterThanComparisonSpecificationExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>SpecificationExpression</c>
	/// labeled alternative in <see cref="RuleSetParser.logical_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSpecificationExpression([NotNull] RuleSetParser.SpecificationExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>LogicalExpressionNot</c>
	/// labeled alternative in <see cref="RuleSetParser.logical_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLogicalExpressionNot([NotNull] RuleSetParser.LogicalExpressionNotContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>JsonPathExpression</c>
	/// labeled alternative in <see cref="RuleSetParser.numeric_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitJsonPathExpression([NotNull] RuleSetParser.JsonPathExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RuleSetParser.query_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitQuery_expr([NotNull] RuleSetParser.Query_exprContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>NumericLessThanComparisonSpecificationExpression</c>
	/// labeled alternative in <see cref="RuleSetParser.specification_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNumericLessThanComparisonSpecificationExpression([NotNull] RuleSetParser.NumericLessThanComparisonSpecificationExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>NumericEqualComparisonSpecificationExpression</c>
	/// labeled alternative in <see cref="RuleSetParser.specification_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNumericEqualComparisonSpecificationExpression([NotNull] RuleSetParser.NumericEqualComparisonSpecificationExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RuleSetParser.jsonpath_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitJsonpath_expr([NotNull] RuleSetParser.Jsonpath_exprContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RuleSetParser.total_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTotal_expr([NotNull] RuleSetParser.Total_exprContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RuleSetParser.value_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitValue_expr([NotNull] RuleSetParser.Value_exprContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RuleSetParser.jsonpath_dotnotation_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitJsonpath_dotnotation_expr([NotNull] RuleSetParser.Jsonpath_dotnotation_exprContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>StringEqualsComparisonSpecificationExpression</c>
	/// labeled alternative in <see cref="RuleSetParser.specification_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStringEqualsComparisonSpecificationExpression([NotNull] RuleSetParser.StringEqualsComparisonSpecificationExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>LogicalExpressionAnd</c>
	/// labeled alternative in <see cref="RuleSetParser.logical_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLogicalExpressionAnd([NotNull] RuleSetParser.LogicalExpressionAndContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>NumericConstant</c>
	/// labeled alternative in <see cref="RuleSetParser.numeric_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNumericConstant([NotNull] RuleSetParser.NumericConstantContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>TotalledJsonPathExpression</c>
	/// labeled alternative in <see cref="RuleSetParser.numeric_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTotalledJsonPathExpression([NotNull] RuleSetParser.TotalledJsonPathExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RuleSetParser.dotnotation_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDotnotation_expr([NotNull] RuleSetParser.Dotnotation_exprContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>ArithmeticExpressionDiv</c>
	/// labeled alternative in <see cref="RuleSetParser.arithmetic_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArithmeticExpressionDiv([NotNull] RuleSetParser.ArithmeticExpressionDivContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RuleSetParser.string_comparison_value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitString_comparison_value([NotNull] RuleSetParser.String_comparison_valueContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RuleSetParser.left_arithmetic_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLeft_arithmetic_expr([NotNull] RuleSetParser.Left_arithmetic_exprContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>TotalledNumericLessThanComparisonSpecificationExpression</c>
	/// labeled alternative in <see cref="RuleSetParser.specification_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTotalledNumericLessThanComparisonSpecificationExpression([NotNull] RuleSetParser.TotalledNumericLessThanComparisonSpecificationExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RuleSetParser.identifierWithQualifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIdentifierWithQualifier([NotNull] RuleSetParser.IdentifierWithQualifierContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RuleSetParser.rule_set"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRule_set([NotNull] RuleSetParser.Rule_setContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>StringContainsComparisonSpecificationExpression</c>
	/// labeled alternative in <see cref="RuleSetParser.specification_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStringContainsComparisonSpecificationExpression([NotNull] RuleSetParser.StringContainsComparisonSpecificationExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>BooleanIsTrueComparisonSpecificationExpression</c>
	/// labeled alternative in <see cref="RuleSetParser.specification_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBooleanIsTrueComparisonSpecificationExpression([NotNull] RuleSetParser.BooleanIsTrueComparisonSpecificationExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RuleSetParser.right_arithmetic_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRight_arithmetic_expr([NotNull] RuleSetParser.Right_arithmetic_exprContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="RuleSetParser.string_array"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitString_array([NotNull] RuleSetParser.String_arrayContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>ArrayIncludesOneComparisonSpecificationExpression</c>
	/// labeled alternative in <see cref="RuleSetParser.specification_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArrayIncludesOneComparisonSpecificationExpression([NotNull] RuleSetParser.ArrayIncludesOneComparisonSpecificationExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>TotalledNumericGreaterThanComparisonSpecificationExpression</c>
	/// labeled alternative in <see cref="RuleSetParser.specification_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTotalledNumericGreaterThanComparisonSpecificationExpression([NotNull] RuleSetParser.TotalledNumericGreaterThanComparisonSpecificationExpressionContext context);
}
} // namespace Console.App.Grammar
